// Code generated by MockGen. DO NOT EDIT.
// Source: minio_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	minio "github.com/minio/minio-go/v7"
	tags "github.com/minio/minio-go/v7/pkg/tags"
	reflect "reflect"
)

// MockMinio is a mock of IMinio interface
type MockMinio struct {
	ctrl     *gomock.Controller
	recorder *MockMinioMockRecorder
}

// MockMinioMockRecorder is the mock recorder for MockMinio
type MockMinioMockRecorder struct {
	mock *MockMinio
}

// NewMockMinio creates a new mock instance
func NewMockMinio(ctrl *gomock.Controller) *MockMinio {
	mock := &MockMinio{ctrl: ctrl}
	mock.recorder = &MockMinioMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMinio) EXPECT() *MockMinioMockRecorder {
	return m.recorder
}

// BucketExists mocks base method
func (m *MockMinio) BucketExists(ctx context.Context, bucketName string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BucketExists", ctx, bucketName)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BucketExists indicates an expected call of BucketExists
func (mr *MockMinioMockRecorder) BucketExists(ctx, bucketName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BucketExists", reflect.TypeOf((*MockMinio)(nil).BucketExists), ctx, bucketName)
}

// GetObjectTagging mocks base method
func (m *MockMinio) GetObjectTagging(ctx context.Context, bucketName, objectName string, opts minio.GetObjectTaggingOptions) (*tags.Tags, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectTagging", ctx, bucketName, objectName, opts)
	ret0, _ := ret[0].(*tags.Tags)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjectTagging indicates an expected call of GetObjectTagging
func (mr *MockMinioMockRecorder) GetObjectTagging(ctx, bucketName, objectName, opts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectTagging", reflect.TypeOf((*MockMinio)(nil).GetObjectTagging), ctx, bucketName, objectName, opts)
}

// ListObjects mocks base method
func (m *MockMinio) ListObjects(ctx context.Context, bucketName string, opts minio.ListObjectsOptions) <-chan minio.ObjectInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListObjects", ctx, bucketName, opts)
	ret0, _ := ret[0].(<-chan minio.ObjectInfo)
	return ret0
}

// ListObjects indicates an expected call of ListObjects
func (mr *MockMinioMockRecorder) ListObjects(ctx, bucketName, opts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjects", reflect.TypeOf((*MockMinio)(nil).ListObjects), ctx, bucketName, opts)
}
